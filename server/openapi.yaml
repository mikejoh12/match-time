openapi: 3.0.1
info:
  title: Calendar-Booking API
  description: A platform for managing/reserving items such as sports courts, meeting rooms, and other resources.
  version: 1.0.0
servers:
- url: http://localhost:5000
tags:
- name: facilities
  description: Facilities
- name: resources
  description: Resources (such as tennis courts)
- name: auth
  description: Authentication / Authorization
- name: bookings
  description: Bookings
paths:
  /api/facilities:
    get:
      tags:
      - facilities
      description: Gets all facilities
      responses:
        200:
          description: An array containing all facilities as objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Facilities'
    post:
      tags:
      - facilities
      description: Creates a new user
      requestBody:
        content:
          application/json:
            schema:
              required:
              - name
              - description
              properties:
                name:
                  type: string
                description:
                  type: string
        required: true
      responses:
        201:
          description: Returns the new facility.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Facility'

  /api/facilities/{id}:
    get:
      tags:
      - facilities
      description: Gets information about a facility
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the facility
      responses:
        200:
          description: An object containing info about the facility
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Facility'

  /api/resources:
    post:
      tags:
      - resources
      description: Creates a new resource associated with a facility
      requestBody:
        content:
          application/json:
            schema:
              required:
              - facilites_id
              - name
              - description
              properties:
                facilities_id:
                  type: integer
                name:
                  type: string
                description:
                  type: string
        required: true
      responses:
        201:
          description: Returns the new resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'

  /api/resources/{id}:
    delete:
      tags:
      - resources
      description: Deletes a resource for a facility and associated bookings
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the resource
      responses:
        204:
          description: Returns a 204 response on successful delete

  /api/resources/by_facility/{id}:
    get:
      tags:
      - resources
      description: Gets information about a facility
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the facility
      responses:
        200:
          description: An array of objects describing the resources for a facility.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resources'

  /api/auth/signup:
    post:
      tags:
      - auth
      description: Creates a new user
      requestBody:
        content:
          application/json:
            schema:
              required:
              - email
              - password
              properties:
                email:
                  type: string
                password:
                  type: string
        required: true
      responses:
        201:
          description: Returns the new user_id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewUser'

  /api/bookings/by_facility/{id}:
    get:
      tags:
      - bookings
      description: Gets all bookings for a facility
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the facility
      responses:
        200:
          description: Returns an array of booking objects for a facility
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookings'

  /api/bookings/by_user/{id}:
    get:
      tags:
      - bookings
      description: Gets all bookings for a user
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the user
      responses:
        200:
          description: Returns an array of booking objects for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookings'

  /api/bookings:
    post:
      tags:
      - bookings
      description: Creates a new booking
      requestBody:
        content:
          application/json:
            schema:
              required:
              - resources_id
              - organizer_id
              - start_time
              - end_time
              properties:
                resources_id:
                  type: integer
                organizer_id:
                  type: integer
                start_time:
                  type: string
                end_timme:
                  type: string 
        required: true
      responses:
        201:
          description: Returns the new booking object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'

  /api/bookings/{id}:
    delete:
      tags:
      - bookings
      description: Deletes a booking for a facility
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Numeric ID of the booking
      responses:
        204:
          description: Returns a 204 response on successful delete

components:
  schemas:
    Facilities:
      type: array
      items:
        type: object
        $ref: '#/components/schemas/Facility'
    Facility:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
    Resources:
      type: array
      items:
        type: object
        $ref: '#/components/schemas/Resource'
    Resource:
      type: object
      properties:
        id:
          type: integer
        facilities_id:
          type: integer
        name:
          type: string
        description:
          type: string
    NewUser:
      type: object
      properties:
        users_id:
          type: integer
    Bookings:
      type: array
      items:
        type: object
        $ref: '#/components/schemas/Booking'
    Booking:
        type: object
        properties:
          bookings_id:
            type: integer
          resources_id:
            type: integer
          organizer_id:
            type: integer
          start_time:
            type: string
            description: ISO 8601 date string.
          end_time:
            type: string
            description: ISO 8601 date string.
          facilities_id:
            type: integer
          resources_name:
            type: string